#Caselight over PythonScript



[gcode_macro _CASELIGHT_ON]
description: Helper: Display backlight on
gcode:
	##### get hardware enables #####
	{% set color = printer['gcode_macro _USER_VARIABLE'].user_caselight %}
	##### end of definiton #####
	{action_respond_info("Caselight is %s" % (color))}


[gcode_macro _DISPLAY_OFF]
description: Helper: Display backlight off
gcode:
  ##### get hardware enables #####
  {% set ena_neo = printer['gcode_macro _USER_VARIABLE'].neo_display|lower %}
  ##### switch off if not already in menu #####
  {% if printer.menu.running|lower == 'false' and ena_neo == 'true' %}
    SET_GCODE_VARIABLE MACRO=DISPLAY VARIABLE=state VALUE='"off"'
    SET_LED LED=neo_display RED=0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=1 SYNC=0
  {% endif %}


[gcode_macro _SET_CASELIGHT]
description: Helper: Set Caselight
gcode:
	RUN_SHELL_COMMAND CMD=set_led
	
	
[gcode_macro CASELIGHT]
description: Toggle light
variable_state: 'off'
gcode:
	{% set ena_runout = printer['gcode_macro _USER_VARIABLE'].runout|lower %}
	
	
	{% if printer["gcode_macro DISPLAY"].state == 'on' %}
		_CASELIGHT_ON
	{% else %}
		_CASELIGHT_OFF
	{% endif %}



[gcode_macro _CASELIGHT_STATE]
description: Helper: Print display backlight state
gcode:
  {action_respond_info("LCD display %s" % (printer["gcode_macro CASELIGHT"].state))}


## Shell Comand is not supported by a default klipper installation 
[gcode_shell_command set_led]
command: sh /home/pi/pixel/set_led.sh
timeout: 30.
verbose: True
