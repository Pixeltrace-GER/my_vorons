#####################################################################
# 	Macro
#####################################################################

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_execute: False
gcode:
  {% set user_var   = printer['gcode_macro _USER_VARIABLE'] %}
  {% set filter_off = user_var.peripheral.filter.run_after_print %}
  {% set vent_on    = user_var.peripheral.vent.on_val %}
  {% set vent_off   = user_var.peripheral.vent.run_after_print %}
  {% set retract    = user_var.filament.retract.end if printer.pause_resume.is_paused|lower == 'false' 
              else user_var.filament.retract.cancel %}
  SET_GCODE_VARIABLE MACRO=CANCEL_PRINT VARIABLE=execute VALUE=True
  M117 Cancel
  CANCEL_PRINT_BASE
  {% if printer['gcode_macro PRINT_START'].state == 'Prepare' %}
    {% if not printer.extruder.can_extrude %}
      {action_respond_info("Extruder Temp to low heat to %3.1f C" % printer.configfile.settings.extruder.min_extrude_temp)}
      M109 S{printer.configfile.settings.extruder.min_extrude_temp}
    {% endif %}
    M83
    G1 E-{retract} F{user_var.speed.retract}
  {% endif %}
  TURN_OFF_HEATERS
  {% if params.PARK|default(0)|int == 1 or (not printer.pause_resume.is_paused and user_var.park.park_at_cancel) %}
    _TOOLHEAD_PARK P={params.PARK|default(0)} X={user_var.park.pause.x} Y={user_var.park.pause.y}
  {% endif %}
  M107                                                                  # turn off fan
  {% if user_var.hw_ena.chamber == 'fan' %} M141 S{vent_on} {% endif %} # vent chamber (setting fan to below ambient)
  _ADD_PRINT_TIME
  {% if params.ERROR|default(0)|int == 1 %}
    {% if user_var.hw_ena.display == 'true' %} _LCD_KNOB COLOR=RED BLINK=0.2 {% endif %}
    _SD_PRINT_STATS R='abort'
  {% else %}
   {% if user_var.hw_ena.display == 'true' %} _LCD_KNOB COLOR=BLUE {% endif %}
    _SD_PRINT_STATS R='canceled'
  {% endif %}
  _SD_PRINTER_STATS
  {% if user_var.hw_ena.caselight == 'true' %} _CASELIGHT_OFF {% endif %}
  {% if user_var.hw_ena.chamber == 'fan' %} UPDATE_DELAYED_GCODE ID=_DELAY_VENT_OFF DURATION={vent_off} {% endif %}
  {% if user_var.hw_ena.filter == 'true' %} UPDATE_DELAYED_GCODE ID=_DELAY_FILTER_OFF DURATION={filter_off} {% endif %}
  {% if user_var.unload_sd|lower == 'true' %} UPDATE_DELAYED_GCODE ID=_DELAY_SDCARD_RESET_FILE DURATION=10 {% endif %}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_restore: {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500}
gcode:
  {% set user_var = printer['gcode_macro _USER_VARIABLE'] %}
  ##### store coordinates to restore them at resume #####
  {% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
                                 'extrude'    : printer.gcode_move.absolute_extrude},
                    'speed'   : printer.gcode_move.speed} %}
  SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=restore VALUE="{restore}"
  {% if user_var.hw_ena.display == 'true' %} _LCD_KNOB COLOR=BLUE BLINK=1 {% endif %}
  {% if not printer.extruder.can_extrude %}
    {action_respond_info("Extruder Temp to low heat to %3.1f C" % printer.configfile.settings.extruder.min_extrude_temp)}
    M109 S{printer.configfile.settings.extruder.min_extrude_temp}
  {% endif %}
  M83
  G0 E-{user_var.filament.retract.pause} F{user_var.speed.retract}
  PAUSE_BASE
  _TOOLHEAD_PARK P=0 X={params.X|default(user_var.park.pause.x)} Y={params.Y|default(user_var.park.pause.y)}
  M104 S{printer.extruder.target}


[gcode_macro _TOOLHEAD_PARK]
description: Helper: Park toolhead used in PAUSE and CANCEL_PRINT
gcode:
  {% set user_var = printer['gcode_macro _USER_VARIABLE'] %}
  {% set pos = {'x': user_var.park.bed.x if params.P|int == 1 
                else params.X,
                'y': user_var.park.bed.y if params.P|int == 1 
                else params.Y,
                'z': user_var.park.bed.z if params.P|int == 1 
                else [(printer.toolhead.position.z + user_var.park.pause.dz), printer.toolhead.axis_maximum.z]|min} %}
  G90
  G0 Z{pos.z} F{user_var.speed.z_hop}
  G0 X{pos.x} Y{pos.y} F{user_var.speed.travel}
  

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set user_var = printer['gcode_macro _USER_VARIABLE'] %}
  {% set restore  = printer["gcode_macro PAUSE"].restore %}
  {% if user_var.hw_ena.display == 'true' %} _LCD_KNOB COLOR=RED {% endif %}
  ##### end of definitions #####  
  {% if user_var.hw_ena.ercf == 'true' %}
	{% if printer["gcode_macro ERCF_PAUSE"].is_paused|int != 0 %}
	  {% set ercf_check = True %}
	{% else %}
	  {% set ercf_check = False %}
	{%endif %}
  {% else %}
    {% set ercf_check = False %}
  {% endif %}

  {% if ercf_check == True %}
    M118 "You can't resume the print without unlocking the ERCF first."
    M118 "Run ERCF_UNLOCK and solve any issue before hitting Resume again"
  {% else %}
    M117 Printing
    RESUME_BASE VELOCITY={params.VELOCITY|default(user_var.speed.travel/60)}  
    G0 E{user_var.filament.retract.pause} F{user_var.speed.retract}
    G0 F{restore.speed}
    {% if restore.absolute.extrude %}         M82 {% endif %} # set back to absolute
    {% if not restore.absolute.coordinates %} G91 {% endif %} # set back to relative
  {% endif %}



##  Clear display output after Duration in seconds  
##  Use: UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1
[delayed_gcode _CLEAR_DISPLAY]
gcode:
  M117

## Reset SD File after Print_END or ##  Clear display output after Duration in seconds
##  Use: UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=1ANCEL_PRINT
## This will avoid the reprint option in Mainsail after a print is done
[delayed_gcode _DELAY_SDCARD_RESET_FILE]
gcode:
  SDCARD_RESET_FILE

##  action_respond_info will be always executed at the beginning of an macro evaluation.
##  Use _PRINT_AR if you need the order of several console outputs in the order given by the macro
##  Use: _PRINT_AR T="QGL forced by PRINT_START"
[gcode_macro _PRINT_AR]
description: Helper: Action response
gcode:
  {% if params.SHOW_LCD|default('false') == 'true' %} M117 {params.T} {% endif %}
  {action_respond_info(params.T)}

[gcode_macro M115]
description: Print host and mcu version
rename_existing: M115.1
gcode:
  {% set out = ['mcu build version:'] %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% if name2 is in ['mcu_version'] %}
        {% set _dummy = out.append("%s: %s" % (name1, printer[name1][name2])) %}
      {% endif %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(out|join("\n"))}
  M115.1
